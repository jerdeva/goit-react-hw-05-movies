{"version":3,"file":"static/js/396.e5506deb.chunk.js","mappings":"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","sources":["components/Api/Api.js","components/Cast/Cast.styled.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KAY = '043e5f0af957ed407534eefdb77ba7dd';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KAY,\n    language: 'en-US',\n  },\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const getTrendingMoviesWeek = async () => {\n  const response = await axios.get(`trending/movie/week`, params);\n  return response.data.results;\n};\n\nexport const searchMoviesByWord = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\n\nexport const getSearch = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const response = await axios.get(`movie/${movie_id}/reviews?`, params);\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const MovieCastTitle = styled.h1`\n  color: darkblue;\n  margin-left: 36px;\n`;\n\nexport const ListOfActors = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 0;\n  gap: 8px 28px;\n`;\n\nexport const ItemOfActors = styled.li`\n  width: 200px;\n`;\n\nexport const ImageWrapper = styled.img`\n  border: black 1px solid;\n`;\n\nexport const ActorName = styled.p`\n  font-size: 20px;\n  color: #680747;\n`;\n\nexport const Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 32px;\n`;\n\nexport const Btn = styled.button`\n  background-color: #7fb5e1;\n  color: #064e8a;\n  border: none;\n  font-weight: 900;\n  border-radius: 4px;\n  box-shadow: 0px 0px 2px 2px #7fb5e1;\n  margin-right: 12px;\n  margin-bottom: 4px;\n  padding: 12px 24px;\n\n`;\n\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../Api/Api';\nimport placeholder from './placeholder.jpg';\n\n\nimport {\n  MovieCastTitle,\n  ListOfActors,\n  ImageWrapper,\n  ItemOfActors,\n  ActorName,\n  Pagination,\n  Btn,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const actorsPerPage = 10;\n\n  useEffect(() => {\n    const movieCast = async () => {\n      try {\n        const response = await getMovieCredits(movieId);\n        setCast(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    movieCast();\n  }, [movieId]);\n\n  const indexOfLastActor = currentPage * actorsPerPage;\n  const indexOfFirstActor = indexOfLastActor - actorsPerPage;\n  const currentActors = cast.slice(indexOfFirstActor, indexOfLastActor);\n\n  const totalPages = Math.ceil(cast.length / actorsPerPage);\n\n  const handleNextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(prevPage => prevPage + 1);\n    }\n  };\n\n  const handlePreviousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(prevPage => prevPage - 1);\n    }\n  };\n\n  return (\n    <>\n      {cast.length !== 0 && (\n        <div>\n          <MovieCastTitle>Movie Cast</MovieCastTitle>\n          <ListOfActors>\n            {currentActors.map(actor => (\n              <ItemOfActors key={actor.id}>\n                <ImageWrapper\n                  width=\"200px\"\n                  height=\"300px\"\n                  src={\n                    actor.profile_path\n                      ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n                      : `${placeholder}`\n                  }\n                  alt={actor.original_name}\n                />\n                <ActorName>{actor.name}</ActorName>\n              </ItemOfActors>\n            ))}\n          </ListOfActors>\n\n          <Pagination>\n            <Btn onClick={handlePreviousPage} disabled={currentPage === 1}>\n              Previous\n            </Btn>\n            <span>\n              Page {currentPage} of {totalPages}\n            </span>\n            <Btn\n              onClick={handleNextPage}\n              disabled={currentPage === totalPages}\n            >\n              Next\n            </Btn>\n          </Pagination>\n        </div>\n      )}\n      {cast.length === 0 && (\n        <div>Sorry! We don't have cast for this movie.</div>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","params","api_key","language","getTrendingMovies","response","data","results","getTrendingMoviesWeek","searchMoviesByWord","movieId","getSearch","movieName","getMovieCredits","cast","getMovieReviews","movie_id","MovieCastTitle","styled","ListOfActors","ItemOfActors","ImageWrapper","ActorName","Pagination","Btn","useParams","useState","setCast","currentPage","setCurrentPage","useEffect","movieCast","console","error","indexOfLastActor","indexOfFirstActor","currentActors","slice","totalPages","Math","ceil","length","map","actor","width","height","src","profile_path","placeholder","alt","original_name","name","id","onClick","prevPage","disabled"],"sourceRoot":""}