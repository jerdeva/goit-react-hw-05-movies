{"version":3,"file":"static/js/396.c56f18e7.chunk.js","mappings":"mTAGAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,CACbA,OAAQ,CACNC,QALY,mCAMZC,SAAU,UAIDC,EAAiB,mCAAG,oGACRJ,EAAAA,EAAAA,IAAA,qBAAgCC,GADxB,cACzBI,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAKjBC,EAAkB,mCAAG,WAAMC,GAAN,uFACTT,EAAAA,EAAAA,IAAA,iBAAoBS,GAAWR,GADtB,cAC1BI,EAD0B,yBAEzBA,EAASC,MAFgB,2CAAH,sDAKlBI,EAAS,mCAAG,WAAMC,GAAN,uFACAX,EAAAA,EAAAA,IAAA,8BAAiCW,GAAaV,GAD9C,cACjBI,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,sDAKTK,EAAe,mCAAG,WAAMH,GAAN,uFACNT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,aAAuCR,GADjC,cACvBI,EADuB,yBAEtBA,EAASC,KAAKO,MAFQ,2CAAH,sDAKfC,EAAe,mCAAG,WAAMC,GAAN,uFACNf,EAAAA,EAAAA,IAAA,gBAAmBe,EAAnB,aAAwCd,GADlC,cACvBI,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qD,oOC9BfS,EAAiBC,EAAAA,GAAAA,GAAH,kEAKdC,EAAeD,EAAAA,GAAAA,GAAH,mGAOZE,EAAeF,EAAAA,GAAAA,GAAH,yCAIZG,EAAeH,EAAAA,GAAAA,IAAH,oDAIZI,EAAYJ,EAAAA,GAAAA,EAAH,+D,SCoCtB,EA9Ca,WACX,IAAQR,GAAYa,EAAAA,EAAAA,MAAZb,QACR,GAAwBc,EAAAA,EAAAA,UAAS,IAAjC,eAAOV,EAAP,KAAaW,EAAb,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAESd,EAAAA,EAAAA,IAAgBH,GAFzB,OAERJ,EAFQ,OAGdmB,EAAQnB,GAHM,gDAKdsB,QAAQC,MAAR,MALc,yDAAH,qDASfF,GACD,GAAE,CAACjB,KAGF,gCACmB,IAAhBI,EAAKgB,SACJ,4BACE,SAACb,EAAD,UAAgB,gBAChB,SAACE,EAAD,UACGL,EAAKiB,KAAI,SAAAC,GAAK,OACb,UAACZ,EAAD,YACE,SAACC,EAAD,CACEY,MAAM,QACNC,OAAO,QACPC,IACEH,EAAMI,aAAN,yCACsCJ,EAAMI,cAD5C,UAEOC,GAETC,IAAKN,EAAMO,iBAEb,SAACjB,EAAD,UAAYU,EAAMQ,SAXDR,EAAMS,GADZ,SAkBJ,IAAhB3B,EAAKgB,SAAgB,yBAAK,gDAGhC,C","sources":["components/Api/Api.js","components/Cast/Cast.styled.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KAY = '043e5f0af957ed407534eefdb77ba7dd';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KAY,\n    language: 'en-US',\n  },\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const searchMoviesByWord = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\n\nexport const getSearch = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const response = await axios.get(`movie/${movie_id}/reviews?`, params);\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const MovieCastTitle = styled.h1`\n  color: darkblue;\n  margin-left: 36px;\n`;\n\nexport const ListOfActors = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 0;\n  gap: 8px 28px;\n`;\n\nexport const ItemOfActors = styled.li`\n  width: 200px;\n`;\n\nexport const ImageWrapper = styled.img`\n  border: black 1px solid;\n`;\n\nexport const ActorName = styled.p`\n  font-size: 20px;\n  color: #680747;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../Api/Api';\nimport placeholder from './placeholder.jpg';\n\nimport {\n  MovieCastTitle,\n  ListOfActors,\n  ImageWrapper,\n  ItemOfActors,\n  ActorName,\n} from './Cast.styled';\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const movieCast = async () => {\n      try {\n        const response = await getMovieCredits(movieId);\n        setCast(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    movieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length !== 0 && (\n        <div>\n          <MovieCastTitle>Movie Cast</MovieCastTitle>\n          <ListOfActors>\n            {cast.map(actor => (\n              <ItemOfActors key={actor.id}>\n                <ImageWrapper\n                  width=\"200px\"\n                  height=\"300px\"\n                  src={\n                    actor.profile_path\n                      ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n                      : `${placeholder}`\n                  }\n                  alt={actor.original_name}\n                />\n                <ActorName>{actor.name}</ActorName>\n              </ItemOfActors>\n            ))}\n          </ListOfActors>\n        </div>\n      )}\n      {cast.length === 0 && <div>Sorry! We don't have cast for this movie.</div>}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","params","api_key","language","getTrendingMovies","response","data","results","searchMoviesByWord","movieId","getSearch","movieName","getMovieCredits","cast","getMovieReviews","movie_id","MovieCastTitle","styled","ListOfActors","ItemOfActors","ImageWrapper","ActorName","useParams","useState","setCast","useEffect","movieCast","console","error","length","map","actor","width","height","src","profile_path","placeholder","alt","original_name","name","id"],"sourceRoot":""}